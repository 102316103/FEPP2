package com.syscom.fep.vo.text.fisc;

import static org.junit.jupiter.api.Assertions.assertEquals;

import org.apache.commons.lang3.StringUtils;
import org.junit.jupiter.api.Test;

import com.syscom.fep.base.enums.MessageFlow;
import com.syscom.fep.common.log.LogHelperFactory;
import com.syscom.fep.frmcommon.util.StringUtil;

public class FISCHeaderTest extends FISCHeader {

	private int length;
	private String[] mIndexValue = new String[65];

	@Override
	public int getTotalLength() {
		return length;
	}

	@Override
	public String getGetPropertyValue(int index) {
		if ((index > 63) || (index < 0)) {
			index = 0;
		}
		return mIndexValue[index];
	}

	@Override
	public void setGetPropertyValue(int index, String value) {

	}

	@Test
	public void testParseFISCMsg_Request2521() {
		final String stringRequest2521 =
				"00000030323030323532313031393931313238303730303030303132303030303038303930353036333131303030303071AB9FEA240C0011000030012B303030303030303830303030303638363430313120383037303030303031323030303036353338303830393035303031353930303430303030343530353030303036383631363831383939303638CDC0A7";
		this.setFISCMessage(stringRequest2521);
		this.parseFISCMsg();
		assertEquals(this.getMessageKind(), MessageFlow.Request);

		this.setMessageId();
		assertEquals(this.getProcessingCode(), "2521");
		assertEquals(this.getMessageId(), "ICTF06");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	@Test
	public void testParseFISCMsg_Confirm2524() {

		final String stringConfirm2524 =
				"000000303230323235323432383735383831383037303030303830363030303030373035313731353035333634303031AD58794D24000000000000012B3030303030303031303030303039313033324120207FC3FDEE";
		this.setFISCMessage(stringConfirm2524);
		this.parseFISCMsg();
		assertEquals(this.getMessageKind(), MessageFlow.Confirmation);

		this.setMessageId();

		assertEquals(this.getMessageId(), "ICTF40");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	@Test
	public void testParseFISCMsg_Request2524_2_ICTF36() {
		final String stringRequest2524 =
				"000000303230303235323432383735383831383037303030303830363030303030373035313731353035333630303030AD58794D24AC2011000033012B3030303030303031303030303039313033324120203030303030353437303433323231414438313230303030383037303030303230313830353137313530353334363031313037303531373030323030313130373738383939303530303033393030343030303033333933303339303034303030303333393330313030353038383036323739393230000AA6B29488269E6E7E94C2DFAB";
		this.setFISCMessage(stringRequest2524);
		this.parseFISCMsg();
		assertEquals(this.getMessageKind(), MessageFlow.Request);
		assertEquals(this.getProcessingCode(), "2524");

		this.setMessageId();

		assertEquals(this.getMessageId(), "ICTF36");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	@Test
	public void testParseFISCMsg_Request2524_1_ICTF41() {
		String stringRequest2524 =
				
		stringRequest2524 =
				"000000303230303235323439393034353731383037303030303935303030303031303036303131343534303330303030E905813D240C0001000030012B30303030303030313030303030303339353730303038303730303030303036303030303037313230363030313231303033303039313133373239393938383732313230363331303130C622C9FD";

		this.setFISCMessage(stringRequest2524);
		this.parseFISCMsg();
		assertEquals(this.getMessageKind(), MessageFlow.Request);

		this.setMessageId();

		assertEquals(this.getMessageId(), "ICTF41");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	@Test
	public void testParseFISCMsg_Confirm2524_() {
		final String stringConfirm2524 =
				
		this.setFISCMessage(stringConfirm2524);
		this.parseFISCMsg();
		// assertEquals(this.getMessageKind(), MessageFlow.Confirmation);

		this.setMessageId();
		// assertEquals(this.getMessageId(), "ICTF40");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	@Test
	public void testMakeFISCMsg_Request2521() {
		final String stringRequest2521 =
				"00000030323030323532313031393931313238303730303030303132303030303038303930353036333131303030303071AB9FEA240C0011000030012B303030303030303830303030303638363430313120383037303030303031323030303036353338303830393035303031353930303430303030343530353030303036383631363831383939303638CDC0A7";
		// final String stringRequest2521 =
		// "00000030323030323532313031393931313238303730303030303132303030303130303630333036333131303030303071AB9FEA240C0011000030012B303030303030303830303030303638363430313120383037303030303031323030303036353338303830393035303031353930303430303030343530353030303036383631363831383939303638CDC0A7";
		this.setFISCMessage(stringRequest2521);
		this.parseFISCMsg();
		assertEquals(this.getMessageKind(), MessageFlow.Request);
		assertEquals(this.getProcessingCode(), "2521");

		this.setMessageId();

		assertEquals(this.getMessageId(), "ICTF06");
		LogHelperFactory.getUnitTestLogger().info(this.toString());

		@SuppressWarnings("unused")
		String before = this.testHex();

		String initDatetime = "100603063110";
		this.setTxnInitiateDateAndTime(initDatetime);

		this.makeFISCMsg();
		LogHelperFactory.getUnitTestLogger().info("=====================");
		LogHelperFactory.getUnitTestLogger().info(this.getFISCMessage());
		LogHelperFactory.getUnitTestLogger().info(this.toString());

	}

	private String testHex() {

		return StringUtil.toHex(
				StringUtils.join(
						this.getMessageType(),
						this.getProcessingCode(),
						this.getSystemTraceAuditNo(),
						this.getTxnDestinationInstituteId(),
						this.getTxnSourceInstituteId(),
						this.getTxnInitiateDateAndTime(),
						this.getResponseCode()));

	}

	public String toString() {
		StringBuilder builder = new StringBuilder()
				.append("systemSupervisoryControlHeader:").append(this.getSystemSupervisoryControlHeader()).append("\n")
				.append("systemNetworkIdentifier:").append(this.getSystemNetworkIdentifier()).append("\n")
				.append("adderssControlField:").append(this.getAdderssControlField()).append("\n")

				.append("messageType:").append(this.getMessageType()).append("\n")
				.append("processingCode:").append(this.getProcessingCode()).append("\n")
				.append("systemTraceAuditNo:").append(this.getSystemTraceAuditNo()).append("\n")
				.append("txnDestinationInstituteId:").append(this.getTxnDestinationInstituteId()).append("\n")
				.append("txnSourceInstituteId:").append(this.getTxnSourceInstituteId()).append("\n")
				.append("txnInitiateDateAndTime:").append(this.getTxnInitiateDateAndTime()).append("\n")
				.append("responseCode:").append(this.getResponseCode()).append("\n")

				.append("syncCheckItem:").append(this.getSyncCheckItem()).append("\n")
				.append("bitMapConfiguration:").append(this.getBitMapConfiguration()).append("\n")
				.append("APData:").append(this.getAPData()).append("\n")

				.append("messageKind:").append(this.getMessageKind()).append("\n")
				.append("messageId:").append(this.getMessageId());

		return builder.toString();
	}
}
